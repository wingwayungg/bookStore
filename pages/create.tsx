import { Button, Input, Textarea, Typography } from "@material-tailwind/react";
import { useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";

import styles from "../styles/Home.module.css";
import { useSelector, useDispatch } from "react-redux";
import { addBook } from "../src/app/store";
import { Book } from "../type/Book";

const Create: NextPage = () => {
    const router = useRouter();
    const dispatch = useDispatch();
    const [name, setName] = useState("");
    const [price, setPrice] = useState<number>();
    const [category, setCategory] = useState("");
    const [description, setDescription] = useState("");

    const [error, setError] = useState(false);
    return (
        <div className={styles.container}>
            <Head>
                <title>Create </title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="flex w-96 flex-col gap-4 m-5">
                <Input label="Book Name" value={name} onChange={(event) => setName(event.target.value)} />
                <Input
                    label="Price"
                    type="number"
                    value={price}
                    onChange={(event) => {
                        // @ts-ignore
                        console.log("event.which", event);
                        // if ((event.which != 8 && event.which != 0 && event.which < 48) || event.which > 57) {
                        //     event.preventDefault();
                        // }
                        console.log("event.target.value", event.target.value);
                        setPrice(Number(event.target.value));
                    }}
                />
                <Input label="Category" value={category} onChange={(event) => setCategory(event.target.value)} />
                <Textarea label="Description" value={description} onChange={(event) => setDescription(event.target.value)} />
                {error && (
                    <Typography variant="small" color="red">
                        Please fill in all fields
                    </Typography>
                )}
            </div>

            <Button
                className=" mx-5"
                onClick={() => {
                    if (!name || price === undefined || !category || !description) setError(true);
                    else {
                        dispatch(addBook(name, price as number, category, description));
                        router.push("/");
                    }
                }}
            >
                Add a book
            </Button>
        </div>
    );
};

export default Create;
